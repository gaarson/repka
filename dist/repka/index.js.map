{
  "version": 3,
  "sources": ["../../packages/reaction/reaction.ts", "../../packages/react-provider/hookAndHok.ts", "../../packages/repka/index.ts"],
  "sourcesContent": ["import { FIELDS_PREFIX } from \"core/domain\";\nimport { REACTION_STACK } from \"reaction\";\n\ntype Store = {\n  [`__REPO__onUpdate`]: ((prop: string) => void)[];\n};\n\nexport class Reaction {\n  private name: string;\n  private scheduler: () => void;\n  private dependencies = new Map<Store, Set<string>>();\n  private isDisposed = false;\n\n  constructor(name: string, scheduler: () => void) {\n    this.name = name;\n    this.scheduler = scheduler;\n  }\n\n  track<T>(fn: () => T): T {\n    console.log('TRACL', this.name, this.isDisposed)\n    if (this.isDisposed) return fn();\n\n    REACTION_STACK.push(this);\n    try {\n      return fn();\n    } finally {\n      REACTION_STACK.pop();\n    }\n  }\n\n  reportDependency(store: Store, prop: string) {\n    if (this.isDisposed) return;\n\n    let deps = this.dependencies.get(store);\n    if (!deps) {\n      deps = new Set();\n      this.dependencies.set(store, deps);\n\n      store[`${FIELDS_PREFIX}onUpdate`].push(this.onUpdate); \n    }\n    deps.add(prop);\n  }\n\n  private onUpdate = (updatedProp: string) => {\n    console.log('ON UPDATE', this.dependencies.entries())\n    for (const [,props] of this.dependencies.entries()) {\n      if (props.has(updatedProp)) {\n        this.scheduler();\n        return; \n      }\n    }\n  }\n\n  updateScheduler(scheduler: () => void) {\n\u00A0 \u00A0 this.scheduler = scheduler;\n\u00A0 }\n  undispose() {\n\u00A0 \u00A0 this.isDisposed = false;\n\u00A0 }\n\n  dispose() {\n    if (this.isDisposed) return;\n\n    for (const store of this.dependencies.keys()) {\n      const index = store[`${FIELDS_PREFIX}onUpdate`].indexOf(this.onUpdate);\n      if (index > -1) {\n        store[`${FIELDS_PREFIX}onUpdate`].splice(index, 1);\n      }\n    }\n    this.dependencies.clear();\n    this.isDisposed = true;\n  }\n}\n", "import React, { useReducer, useRef, useEffect } from 'react';\n\nimport { Reaction } from 'reaction/reaction';\nimport { simpleHook } from './index';\n\nfunction createHOCWrapper(store: any, Component: React.ComponentType) {\nconst HOCWrapper: React.FC<any> = (props) => {\n\u00A0 \u00A0 const [, forceUpdate] = useReducer(x => x + 1, 0);\n\n\u00A0 \u00A0 const reactionRef = useRef<Reaction | null>(null);\n\n\u00A0 \u00A0 if (reactionRef.current === null) {\n\u00A0 \u00A0 \u00A0 reactionRef.current = new Reaction(`${Component.name}_Observer`, forceUpdate);\n\u00A0 \u00A0 }\n\n    reactionRef.current.updateScheduler(forceUpdate);\n\n\u00A0 \u00A0 useEffect(() => {\n\u00A0 \u00A0 \u00A0 reactionRef.current.undispose();\n\u00A0 \u00A0 \u00A0 return () => reactionRef.current.dispose();\n\u00A0 \u00A0 }, [reactionRef.current]);\n\n\u00A0 \u00A0 return reactionRef.current.track(() => {\n\u00A0 \u00A0 \u00A0 return Component(props);\n\u00A0 \u00A0 });\n\u00A0 };\n\n  HOCWrapper.displayName = `RepkaObserver(${Component.displayName || Component.name})`;\n  return HOCWrapper;\n}\n\nfunction isReactComponent(arg: Function): boolean {\n  return typeof arg === 'function' && /^[A-Z]/.test(arg.name);\n}\n\nexport function repkaHookAndHoc(arg?: Function | string) {\n  if (arg && typeof arg !== 'string' && isReactComponent(arg)) {\n    return createHOCWrapper(this, arg as React.ComponentType);\n  }\n\n  try {\n    return simpleHook(this, typeof arg);\n  } catch (e) {\n    console.error('[Repka] \u041E\u0448\u0438\u0431\u043A\u0430 \u0432\u044B\u0437\u043E\u0432\u0430 \u0445\u0443\u043A\u0430. \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044C, \u0447\u0442\u043E state() \u0432\u044B\u0437\u044B\u0432\u0430\u0435\u0442\u0441\u044F \u043D\u0430 \u0432\u0435\u0440\u0445\u043D\u0435\u043C \u0443\u0440\u043E\u0432\u043D\u0435 \u043A\u043E\u043C\u043F\u043E\u043D\u0435\u043D\u0442\u0430.', e);\n    return this;\n  }\n}\n", "import { createSource } from 'core';\nimport { simpleReactProvider } from 'react-provider';\nimport { repkaHookAndHoc } from 'react-provider/hookAndHok';\n\nexport const repka = <T>(obj: T) => createSource<\n  T, \n  {main: typeof repkaHookAndHoc, getter: typeof simpleReactProvider}\n>(\n  obj,\n  {main: repkaHookAndHoc, getter: simpleReactProvider}\n);\n\nexport { watch } from 'watcher';\n"],
  "mappings": "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",
  "names": []
}
