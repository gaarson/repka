import{a as d}from"../chunks/MU36BVS6.chunk.js";import{a,b as u}from"../chunks/SRBQM72W.chunk.js";import{a as p}from"../chunks/LGHY6XNV.chunk.js";import{a as k}from"../chunks/672NLXAJ.chunk.js";import{b as o}from"../chunks/O3VCMV5J.chunk.js";import{useReducer as v,useRef as T,useEffect as g}from"react";var n=class{constructor(e,t){this.dependencies=new Map;this.isDisposed=!1;this.onUpdate=e=>{for(let[,t]of this.dependencies.entries())if(t.has(e)){this.scheduler();return}};this.name=e,this.scheduler=t}track(e){if(this.isDisposed)return e();p.push(this);try{return e()}finally{p.pop()}}reportDependency(e,t){if(this.isDisposed)return;let i=this.dependencies.get(e);i||(i=new Set,this.dependencies.set(e,i),e[`${o}onUpdate`].push(this.onUpdate)),i.add(t)}updateScheduler(e){this.scheduler=e}undispose(){this.isDisposed=!1}dispose(){if(!this.isDisposed){for(let e of this.dependencies.keys()){let t=e[`${o}onUpdate`].indexOf(this.onUpdate);t>-1&&e[`${o}onUpdate`].splice(t,1)}this.dependencies.clear(),this.isDisposed=!0}}};function D(r,e){let t=i=>{let[,c]=v(y=>y+1,0),s=T(null);return s.current===null&&(s.current=new n(`${e.name}_Observer`,c)),s.current.updateScheduler(c),g(()=>(s.current.undispose(),()=>s.current.dispose()),[s.current]),s.current.track(()=>e(i))};return t.displayName=`RepkaObserver(${e.displayName||e.name})`,t}function R(r){try{if(typeof r!="string")return D(this,r);if(typeof r=="string")return a(this,r)}catch{return this}}var M=r=>d(r,{main:R,getter:u});export{M as repka,k as watch};
