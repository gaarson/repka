import{a}from"../chunks/F22VXRRR.chunk.js";import{a as d,b as u}from"../chunks/AUP5IPF4.chunk.js";import{a as p}from"../chunks/LGHY6XNV.chunk.js";import{a as y}from"../chunks/FT6P4UXX.chunk.js";import{b as n}from"../chunks/O3VCMV5J.chunk.js";import{useReducer as R,useRef as S,useEffect as T}from"react";var o=class{constructor(e,r){this.dependencies=new Map;this.isDisposed=!1;this.onUpdate=(e,r)=>{for(let[,s]of this.dependencies.entries())if(s.has(e)){this.scheduler();return}};this.name=e,this.scheduler=r}track(e){if(this.isDisposed)return e();for(let r of this.dependencies.values())r.clear();p.push(this);try{return e()}finally{p.pop()}}reportDependency(e,r){if(this.isDisposed)return;let s=this.dependencies.get(e);s||(s=new Set,this.dependencies.set(e,s),e[`${n}onUpdate`].push(this.onUpdate)),s.add(r)}updateScheduler(e){this.scheduler=e}undispose(){this.isDisposed=!1}dispose(){if(!this.isDisposed){for(let e of this.dependencies.keys()){let r=e[`${n}onUpdate`].indexOf(this.onUpdate);r>-1&&e[`${n}onUpdate`].splice(r,1)}this.dependencies.clear(),this.isDisposed=!0}}};function g(t,e){let r=s=>{let[,c]=R(v=>v+1,0),i=S(null);return i.current===null&&(i.current=new o(`${e.name}_Observer`,c)),i.current.updateScheduler(c),T(()=>(i.current.undispose(),()=>i.current.dispose()),[i.current]),i.current.track(()=>e(s))};return r.displayName=`RepkaObserver(${e.displayName||e.name})`,r}function k(t){try{if(typeof t!="string")return g(this,t);if(typeof t=="string")return d(this,t)}catch{return this}}var M=t=>a(t,{main:k,getter:u});export{M as repka,y as watch};
