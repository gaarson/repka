import{a}from"../chunks/MU36BVS6.chunk.js";import{a as d,b as u}from"../chunks/SRBQM72W.chunk.js";import{a as p}from"../chunks/LGHY6XNV.chunk.js";import{a as k}from"../chunks/672NLXAJ.chunk.js";import{b as n}from"../chunks/O3VCMV5J.chunk.js";import{useReducer as v,useRef as T,useEffect as D}from"react";var o=class{constructor(e,t){this.dependencies=new Map;this.isDisposed=!1;this.onUpdate=e=>{for(let[,t]of this.dependencies.entries())if(t.has(e)){this.scheduler();return}};this.name=e,this.scheduler=t}track(e){if(this.isDisposed)return e();p.push(this);try{return e()}finally{p.pop()}}reportDependency(e,t){if(this.isDisposed)return;let i=this.dependencies.get(e);i||(i=new Set,this.dependencies.set(e,i),e[`${n}onUpdate`].push(this.onUpdate)),i.add(t)}updateScheduler(e){this.scheduler=e}undispose(){this.isDisposed=!1}dispose(){if(!this.isDisposed){for(let e of this.dependencies.keys()){let t=e[`${n}onUpdate`].indexOf(this.onUpdate);t>-1&&e[`${n}onUpdate`].splice(t,1)}this.dependencies.clear(),this.isDisposed=!0}}};function S(r,e){let t=i=>{let[,c]=v(R=>R+1,0),s=T(null);return s.current===null&&(s.current=new o(`${e.name}_Observer`,c)),s.current.updateScheduler(c),D(()=>(s.current.undispose(),()=>s.current.dispose()),[s.current]),s.current.track(()=>e(i))};return t.displayName=`RepkaObserver(${e.displayName||e.name})`,t}function y(r){if(r&&typeof r!="string")return S(this,r);try{return d(this,typeof r)}catch{return this}}var M=r=>a(r,{main:y,getter:u});export{M as repka,k as watch};
