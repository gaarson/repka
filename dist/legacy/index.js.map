{
  "version": 3,
  "sources": ["../../packages/core/legacy.ts", "../../packages/watcher/legacy.ts", "../../packages/repka/repository.ts", "../../packages/react-provider/legacy.ts", "../../packages/legacy/index.ts"],
  "sourcesContent": ["export type providerType<DataType = undefined, MethodsObjType = undefined> = () => \n  (MethodsObjType extends object ? [DataType, MethodsObjType] : DataType);\n\nexport class Callable<T extends []> extends Function {\n  __call: Function\n  constructor() {\n    super();\n    let closure = undefined;\n    closure = (...args: T) => { \n      return closure.__call(...args); \n    };\n    return Object.setPrototypeOf(closure, new.target.prototype);\n  }\n}\n\nexport const SPECIAL_KEY = '__PROVIDER_ID__';\nexport const FIELDS_PREFIX = '__REPO__'\n\nconst get = (obj, prop) => {\n  if (\n    obj[`${FIELDS_PREFIX}muppet`][SPECIAL_KEY] \n    && prop !== obj[`${FIELDS_PREFIX}muppet`][SPECIAL_KEY]\n    && (typeof prop === 'string' && !prop.startsWith(FIELDS_PREFIX)) \n  ) {\n    obj[`${FIELDS_PREFIX}muppet`][obj[`${FIELDS_PREFIX}muppet`][SPECIAL_KEY]] = false;\n    obj[`${FIELDS_PREFIX}criticalFields`][obj[`${FIELDS_PREFIX}muppet`][SPECIAL_KEY]] = [...new Set([\n      ...(obj[`${FIELDS_PREFIX}criticalFields`][obj[`${FIELDS_PREFIX}muppet`][SPECIAL_KEY]] || []),\n      prop\n    ])];\n  }\n  if ((typeof prop === 'string' && prop.startsWith(FIELDS_PREFIX)) || prop === '__call') {\n    return obj[prop]\n  }\n\n  return obj[`${FIELDS_PREFIX}data`][prop];\n}\n\nconst set = (obj, prop, value): boolean => {\n  if ((typeof prop === 'string' && prop.startsWith(FIELDS_PREFIX)) || prop === '__call') {\n    obj[prop] = value;\n    return true;\n  } \n\n  obj[`${FIELDS_PREFIX}data`] = {\n    ...obj[`${FIELDS_PREFIX}data`],\n    [prop]: value\n  };\n\n  if (obj[`${FIELDS_PREFIX}listeners`][prop] && obj[`${FIELDS_PREFIX}listeners`][prop].size) {\n    obj[`${FIELDS_PREFIX}listeners`][prop].forEach((notify, key) => {\n      if (obj[`${FIELDS_PREFIX}muppet`][key] !== undefined \n        && obj[`${FIELDS_PREFIX}muppet`][key] === false) { \n        obj[`${FIELDS_PREFIX}muppet`][key] = true; \n      }\n\n      notify();\n    });\n  }\n  if (obj[`${FIELDS_PREFIX}onUpdate`].length) {\n    obj[`${FIELDS_PREFIX}onUpdate`].forEach((fn: (...args: unknown[]) => void) => fn && fn(prop));\n  }\n\n  return true;\n}\n\nexport interface ISource<T> {\n  <\n    DataType = T,\n    MethodsObjType = undefined\n  >(\n    data: DataType,\n    methods?: MethodsObjType,\n    provider?: providerType<DataType, MethodsObjType>,\n  ): (() => [DataType, Omit<MethodsObjType, 'repo'>]) & DataType;\n}\n\nexport const createSource = <\n  DataType = unknown,\n  MethodsObjType = undefined\n>(\n  data: DataType,\n  methods?: MethodsObjType,\n  provider?: providerType<DataType, MethodsObjType>,\n): ISource<DataType> => {\n  try {\n    function defaultProvider() {\n      return methods ? [this, methods] : this;\n    };\n    const callableObj = new Callable();\n\n    if (methods) callableObj[`${FIELDS_PREFIX}methods`] = methods;\n\n    callableObj[`${FIELDS_PREFIX}onUpdate`] = [];\n    callableObj[`${FIELDS_PREFIX}data`] = data;\n    callableObj[`${FIELDS_PREFIX}criticalFields`] = {};\n    callableObj[`${FIELDS_PREFIX}muppet`] = {};\n    callableObj[`${FIELDS_PREFIX}listeners`] = Object.keys(data).reduce(\n      (prev, key) => ({ ...prev, [key]: new Map() }), {}\n    );\n\n    const proxy = new Proxy(callableObj, { set, get });\n    callableObj.__call = (provider || defaultProvider).bind(proxy);\n\n    return proxy;\n  } catch (error) {\n    console.error('SOURCE OBJECT ERROR: ', error);\n  }\n};\n", "import { providerType, SPECIAL_KEY, FIELDS_PREFIX, createSource } from 'core/legacy';\n\nexport type baseSourceObjType<T> = {\n  [key: string]: T,\n};\n\nexport type specialKeyLiteralType = \"__PROVIDER_ID__\";\n\nexport type proxyHandlerType<T> = {\n  set: (\n    obj: T & { onUpdate: ((...args: any) => void)[] },\n    prop: string,\n    value: T\n  ) => boolean\n  get?: (\n    obj: T & { onUpdate: ((...args: any) => void)[] },\n    prop: string,\n  ) => unknown\n};\n\nexport interface IWatcher<\n  T = { [key: string]: unknown },\n  M = undefined,\n  P = unknown\n> {\n  sourceObj: T & (P | providerType<T, M>);\n  savedProvider?: P;\n  SPECIAL_KEY: specialKeyLiteralType;\n  broadcast: any;\n\n  init(\n    initObj: T,\n    options: {\n      provider?: providerType,\n      methods?: M,\n      broadcastName?: string\n    }\n  ): void;\n\n  set(\n    propertyName: keyof (T), \n    value: (T & providerType<T, M>)[keyof (T)],\n    ignoreBroadcast?: boolean\n  ): void;\n  get(\n    propertyName?: keyof (T)\n  ): (T)[keyof T] | T;\n\n  createBroadcast(broadcastName: string): void;\n  watch(fieldName: string): Promise<T>;\n  watchFor(fieldName: string, neededValue: unknown): Promise<T>;\n}\n\nexport type watcherCreatorType = <T, M>(\n  obj: T,\n  provider?: providerType,\n  methods?: M,\n  broadcastName?: string\n) => Watcher<T, M>;\n\nexport class Watcher<T = {[key: string]: unknown}, M = undefined, P = unknown> implements IWatcher<T, M, P> {\n  savedProvider: P;\n  sourceObj: T & (P | providerType<T, M>);\n  SPECIAL_KEY: specialKeyLiteralType = SPECIAL_KEY;\n  broadcast: any;\n\n  init(\n    initObj: T,\n    options: {\n      provider?: any,\n      methods?: M,\n      broadcastName?: string\n    } = {}\n  ): void {\n    if (typeof initObj === 'object' && !Array.isArray(initObj)) {\n      if (options.provider) this.savedProvider = options.provider;\n      this.sourceObj = createSource<T, M>(\n        initObj, \n        options.methods, \n        options.provider || this.savedProvider\n      ) as T & (P | providerType<T, M>);\n    }\n    if (options.broadcastName) this.createBroadcast(options.broadcastName);\n  }\n\n  createBroadcast(broadcastName: string = 'broadcastWatcher'): void {\n    this.broadcast = new BroadcastChannel(broadcastName);\n\n    this.broadcast.onmessage = (\n      { data }: { \n        data: { \n          type?: keyof (T), \n          data: providerType<T> | (providerType<T>)[keyof (providerType<T>)] \n        } | 'needSome' \n      }\n    ) => {\n      if (data === 'needSome') {\n        this.broadcast.postMessage({ data: this.get() });\n      } else if (data.type === undefined) {\n        for (const key in data.data) this.sourceObj[key] = data.data[key];\n      } else {\n        // this.set(data.type, data.data, true);\n      }\n    };\n\n    this.broadcast.postMessage('needSome');\n  }\n\n  public set(\n    propertyName: keyof (T), \n    value: (T & providerType<T, M>)[keyof (T)],\n    ignoreBroadcast = false\n  ): void {\n    if (this.sourceObj) {\n      this.sourceObj[propertyName] = value;\n    }\n    if (this.broadcast && !ignoreBroadcast) {\n      this.broadcast.postMessage({ type: propertyName, data: value });\n    }\n  }\n  public get(\n    propertyName?: keyof (T)\n  ): (T)[keyof T] | T {\n    if (this.sourceObj && propertyName) {\n      return this.sourceObj[propertyName];\n    } else if (!propertyName) {\n      return this.sourceObj[`${FIELDS_PREFIX}data`];\n    }\n  }\n\n  public watch(\n    propertyName: string,\n  ): Promise<T> {\n    const index = this.sourceObj[`${FIELDS_PREFIX}onUpdate`].length;\n\n    return new Promise((resolve) => {\n      this.sourceObj[`${FIELDS_PREFIX}onUpdate`] = [\n        ...this.sourceObj[`${FIELDS_PREFIX}onUpdate`], \n        (updatedProperty) => {\n          if (propertyName === updatedProperty) {\n            resolve(this.sourceObj[propertyName]);\n            this.sourceObj[`${FIELDS_PREFIX}onUpdate`][index] = null;\n\n            if (this.sourceObj[`${FIELDS_PREFIX}onUpdate`].every((i) => i ===  null))\n              this.sourceObj[`${FIELDS_PREFIX}onUpdate`] = [];\n          }\n        }\n      ];\n    });\n  }\n  public watchFor(\n    propertyName: string,\n    neededValue: T\n  ): Promise<T> {\n    const index = this.sourceObj[`${FIELDS_PREFIX}onUpdate`].length;\n    return new Promise((resolve) => {\n      this.sourceObj[`${FIELDS_PREFIX}onUpdate`] = [\n        ...this.sourceObj[`${FIELDS_PREFIX}onUpdate`], \n        (updatedProperty) => {\n          if (propertyName === updatedProperty \n            && this.sourceObj[propertyName] === neededValue) {\n            resolve(this.sourceObj[propertyName]);\n            this.sourceObj[`${FIELDS_PREFIX}onUpdate`][index] = null;\n\n            if (this.sourceObj[`${FIELDS_PREFIX}onUpdate`].every((i) => i ===  null)) \n              this.sourceObj[`${FIELDS_PREFIX}onUpdate`] = [];\n          }\n        }\n      ];\n    });\n  }\n}\n\nexport const watcherCreator = <T, M, P>(\n  obj: T,\n  provider?: P,\n  methods?: M,\n  broadcastName?: string\n): Watcher<T, M, P> => {\n  const watcher = new Watcher<T, M, P>();\n  watcher.init(obj, { provider, methods, broadcastName });\n  return watcher;\n};\n\n", "import { IWatcher, watcherCreator } from 'watcher/legacy';\n\nexport interface IRepositoryService {\n  <\n    RepositoryPort extends { [key: string]: unknown },\n    Controller = undefined,\n    Provider = ((() => [RepositoryPort, Omit<Controller, 'repo'>]) & RepositoryPort)\n  >(\n    defaultObject?: RepositoryPort,\n    controller?: Controller & { repo?: IRepositoryService },\n  ): Provider;\n\n  keys: string[];\n  actions: IWatcher<any, any>;\n  initializeState<T, M> (\n    data?: T,  \n    options?: { methods?: M, prevActions?: any, provider?: any }\n  ): void;\n  initRepository?<T, M, P> (repo?: T, options?: {\n    methods?: M, provider?: P, prevActions?: any\n  }): IWatcher<T, M, P>;\n\n  __call: <\n    RepositoryPort extends { [key: string]: unknown },\n    Controller = undefined,\n    Provider = ((() => [RepositoryPort, Omit<Controller, 'repo'>]) & RepositoryPort)\n  >(\n    defaultObject?: RepositoryPort,\n    controller?: Controller & { repo?: IRepositoryService },\n  ) => Provider;\n}\n\nexport class RepositoryService extends Function {\n  keys: string[];\n  actions: IWatcher<any, any>;\n  initializeState<T, M, P>(\n    data?: T,  \n    options?: { methods?: M, prevActions?: any, provider?: P }\n  ): void {};\n  initRepository?<T, M, P> (repo?: T, options?: {\n    methods?: M, provider?: P, prevActions?: any\n  }): IWatcher<T, M>;\n\n  __call: <\n    RepositoryPort extends { [key: string]: unknown },\n    Controller = undefined,\n  >(\n    defaultObject?: RepositoryPort,\n    controller?: Controller & { repo?: IRepositoryService },\n  ) => ((a: any) => [RepositoryPort, Omit<Controller, 'repo'>]) & RepositoryPort;\n\n  constructor() {\n    super();\n    let closure = undefined;\n    closure = (...args: any) => { \n      return closure.__call(...args); \n    };\n    return Object.setPrototypeOf(closure, new.target.prototype);\n  }\n}\n\ninterface initRepoBoundFunction {\n    <T, M, P = undefined>(rp?: T, options?: {\n      methods?: M,\n      provider?: P,\n      prevActions?: any\n    }): IWatcher<T, M, P>;\n    call<T, M>(this: Function, ...argArray: any[]): IWatcher<T, M>;\n}\nexport const initRepository: initRepoBoundFunction = function <T, M, P>(\n  repo: T,\n  options: {\n    methods?: M,\n    provider?: P,\n    prevActions?: any\n  } = {}\n): IWatcher<T, M, P> {\n  const keys = Object.keys(repo || {});\n\n  const withOnUpdate: T = keys.reduce((\n    prev: T, \n    curr: string\n  ) => {\n    let value: unknown;\n    if (options.prevActions !== undefined && options.prevActions.get(curr) !== undefined) {\n      value = options.prevActions.get(curr);\n    } else if (repo) {\n      value = repo[curr];\n    }\n    return { ...prev, [curr]: value };\n  }, repo || {} as T);\n\n  return watcherCreator<T, M, P>(\n    withOnUpdate, \n    options.provider, \n    options.methods\n  );\n}\n\nexport const initializeState = function<T, M>(\n  data?: T, \n  options: { methods?: M, prevActions?: any, provider?: any } = {}\n): void {\n  if (!options.prevActions) options.prevActions = this?.actions;\n  if (!options.provider) options.provider = this?.actions?.savedProvider;\n\n  const newActions = initRepository.call<T, M>(this, data, options);\n  this.actions = newActions;\n}\n\nfunction getAllMethodNames(toCheck: {[key: string]: unknown}) {\n  const props = [];\n  let obj = toCheck;\n  do {\n    props.push(...Object.getOwnPropertyNames(obj));\n  } while (obj = Object.getPrototypeOf(obj));\n  \n  return props.sort().filter((e, i, arr) => { \n    if (e != arr[i + 1] && typeof toCheck[e] == 'function') return true;\n  });\n}\n\nexport function repositoryCreator<\n  RepositoryPort extends { [key: string]: unknown },\n  Controller = undefined,\n  Provider = ((() => [RepositoryPort, Omit<Controller, 'repo'>]) & RepositoryPort)\n>(\n  defaultObject?: RepositoryPort,\n  controller?: Controller & { repo?: IRepositoryService },\n  { provider }: {\n    provider?: Provider,\n    broadcastName?: string\n  } = {}\n): Provider {\n  let methods: Controller;\n  let repo = null;\n\n  if (controller) {\n    const constructorKeys = getAllMethodNames(controller);\n\n    methods = constructorKeys.reduce(\n      (prev, curr) => (curr !== 'constructor' && typeof controller[curr] === 'function') \n        ? { ...prev, [curr]: controller[curr].bind(controller) }\n        : prev,\n      {} as Controller\n    );\n\n    const prevActions = controller.repo?.actions;\n    controller.repo = new RepositoryService() as IRepositoryService;\n    controller.repo.initRepository = initRepository;\n    controller.repo.initializeState = initializeState;\n    controller.repo.initializeState<RepositoryPort, Controller>(\n      prevActions ? { ...prevActions.get(), ...defaultObject } : defaultObject,\n      { methods, prevActions, provider: provider || prevActions?.savedProvider || this?.actions?.savedProvider }\n    );\n  } else {\n    repo = initRepository<RepositoryPort, Controller, Provider>(\n      defaultObject, \n      { provider: provider || this?.actions?.savedProvider, methods }\n    );\n  }\n\n  return (repo || controller?.repo?.actions || {}).sourceObj;\n}\n\n", "import React from 'react';\nimport { FIELDS_PREFIX } from 'core/domain';\n\nexport type reactProviderType<T, M> = (parameter?: keyof T) => [T, M] | T[keyof T];\n\nexport function reactProvider<T, M>(parameter?: keyof T): [T, M] {\n  let useSync;\n  let key = React.useId \n    ? React.useId()\n    : React.useRef(parseInt(String((Math.random() * 10000000)), 10).toString()).current\n\n  if (React.useId) {\n    useSync = React.useSyncExternalStore;\n  }\n\n  const state = useSync(notify => {\n    if (this[`${FIELDS_PREFIX}criticalFields`][key]) {\n      this[`${FIELDS_PREFIX}criticalFields`][key].forEach(prop => {\n        if (\n          this[`${FIELDS_PREFIX}listeners`][prop] &&\n          typeof this[`${FIELDS_PREFIX}listeners`][prop] !== 'function'\n        ) this[`${FIELDS_PREFIX}listeners`][prop].set(key, notify);\n      });\n    }\n\n    return () => {\n      if (this[`${FIELDS_PREFIX}criticalFields`][key]) {\n        this[`${FIELDS_PREFIX}muppet`][key] = false;\n        this[`${FIELDS_PREFIX}criticalFields`][key].forEach(prop => {\n          if (\n            this[`${FIELDS_PREFIX}listeners`][prop] &&\n            typeof this[`${FIELDS_PREFIX}listeners`][prop] !== 'function'\n          ) {\n            this[`${FIELDS_PREFIX}listeners`][prop].delete(key);\n          }\n        });\n      }\n    };\n  }, () => {\n    this[`${FIELDS_PREFIX}muppet`]['__PROVIDER_ID__'] = key;\n\n    if (this[`${FIELDS_PREFIX}muppet`][key] === true) {\n      this[`${FIELDS_PREFIX}muppet`]['__PROVIDER_ID__'] = undefined;\n      return this[`${FIELDS_PREFIX}data`];\n    }\n\n    return this;\n  });\n\n  React.useEffect(() => {\n    return () => {\n      if (this[`${FIELDS_PREFIX}muppet`][key] && this[`${FIELDS_PREFIX}criticalFields`][key]) {\n        this[`${FIELDS_PREFIX}criticalFields`][key].forEach(prop => {\n          if (\n            this[`${FIELDS_PREFIX}listeners`][prop] &&\n            typeof this[`${FIELDS_PREFIX}listeners`][prop] !== 'function'\n          ) this[`${FIELDS_PREFIX}listeners`][prop].delete(key);\n        });\n        delete this[`${FIELDS_PREFIX}criticalFields`][key];\n        delete this[`${FIELDS_PREFIX}muppet`][key];\n      }\n    };\n  }, []);\n\n  if (parameter !== undefined) {\n    return state[parameter];\n  }\n\n  return [state, this[`${FIELDS_PREFIX}methods`]];\n}\n", "import { \n  IRepositoryService, \n  RepositoryService, \n  repositoryCreator,  \n  initRepository, \n  initializeState,  \n} from 'repka/repository';\nimport { reactProvider } from 'react-provider/legacy';\n\nconst repka: IRepositoryService = new RepositoryService() as IRepositoryService;\n\nrepka.initRepository = initRepository;\nrepka.initializeState = initializeState;\nrepka.actions = initRepository<\n  {}, \n  any, \n  () => void //reactProviderType<{}, any>\n>({}, { provider: reactProvider });\nrepka.__call = repositoryCreator;\n\nexport { repka, IRepositoryService };\n"],
  "mappings": ";;;;;AAGO,IAAM,WAAN,cAAqC,SAAS;AAAA,EAEnD,cAAc;AACZ,UAAM;AACN,QAAI,UAAU;AACd,cAAU,IAAI,SAAY;AACxB,aAAO,QAAQ,OAAO,GAAG,IAAI;AAAA,IAC/B;AACA,WAAO,OAAO,eAAe,SAAS,WAAW,SAAS;AAAA,EAC5D;AACF;AAEO,IAAM,cAAc;AACpB,IAAMA,iBAAgB;AAE7B,IAAM,MAAM,CAAC,KAAK,SAAS;AACzB,MACE,IAAI,GAAGA,cAAa,QAAQ,EAAE,WAAW,KACtC,SAAS,IAAI,GAAGA,cAAa,QAAQ,EAAE,WAAW,MACjD,OAAO,SAAS,YAAY,CAAC,KAAK,WAAWA,cAAa,IAC9D;AACA,QAAI,GAAGA,cAAa,QAAQ,EAAE,IAAI,GAAGA,cAAa,QAAQ,EAAE,WAAW,CAAC,IAAI;AAC5E,QAAI,GAAGA,cAAa,gBAAgB,EAAE,IAAI,GAAGA,cAAa,QAAQ,EAAE,WAAW,CAAC,IAAI,CAAC,GAAG,oBAAI,IAAI;AAAA,MAC9F,GAAI,IAAI,GAAGA,cAAa,gBAAgB,EAAE,IAAI,GAAGA,cAAa,QAAQ,EAAE,WAAW,CAAC,KAAK,CAAC;AAAA,MAC1F;AAAA,IACF,CAAC,CAAC;AAAA,EACJ;AACA,MAAK,OAAO,SAAS,YAAY,KAAK,WAAWA,cAAa,KAAM,SAAS,UAAU;AACrF,WAAO,IAAI,IAAI;AAAA,EACjB;AAEA,SAAO,IAAI,GAAGA,cAAa,MAAM,EAAE,IAAI;AACzC;AAEA,IAAM,MAAM,CAAC,KAAK,MAAM,UAAmB;AACzC,MAAK,OAAO,SAAS,YAAY,KAAK,WAAWA,cAAa,KAAM,SAAS,UAAU;AACrF,QAAI,IAAI,IAAI;AACZ,WAAO;AAAA,EACT;AAEA,MAAI,GAAGA,cAAa,MAAM,IAAI;AAAA,IAC5B,GAAG,IAAI,GAAGA,cAAa,MAAM;AAAA,IAC7B,CAAC,IAAI,GAAG;AAAA,EACV;AAEA,MAAI,IAAI,GAAGA,cAAa,WAAW,EAAE,IAAI,KAAK,IAAI,GAAGA,cAAa,WAAW,EAAE,IAAI,EAAE,MAAM;AACzF,QAAI,GAAGA,cAAa,WAAW,EAAE,IAAI,EAAE,QAAQ,CAAC,QAAQ,QAAQ;AAC9D,UAAI,IAAI,GAAGA,cAAa,QAAQ,EAAE,GAAG,MAAM,UACtC,IAAI,GAAGA,cAAa,QAAQ,EAAE,GAAG,MAAM,OAAO;AACjD,YAAI,GAAGA,cAAa,QAAQ,EAAE,GAAG,IAAI;AAAA,MACvC;AAEA,aAAO;AAAA,IACT,CAAC;AAAA,EACH;AACA,MAAI,IAAI,GAAGA,cAAa,UAAU,EAAE,QAAQ;AAC1C,QAAI,GAAGA,cAAa,UAAU,EAAE,QAAQ,CAAC,OAAqC,MAAM,GAAG,IAAI,CAAC;AAAA,EAC9F;AAEA,SAAO;AACT;AAaO,IAAM,eAAe,CAI1B,MACA,SACA,aACsB;AACtB,MAAI;AACF,QAAS,kBAAT,WAA2B;AACzB,aAAO,UAAU,CAAC,MAAM,OAAO,IAAI;AAAA,IACrC;AAAC;AACD,UAAM,cAAc,IAAI,SAAS;AAEjC,QAAI,QAAS,aAAY,GAAGA,cAAa,SAAS,IAAI;AAEtD,gBAAY,GAAGA,cAAa,UAAU,IAAI,CAAC;AAC3C,gBAAY,GAAGA,cAAa,MAAM,IAAI;AACtC,gBAAY,GAAGA,cAAa,gBAAgB,IAAI,CAAC;AACjD,gBAAY,GAAGA,cAAa,QAAQ,IAAI,CAAC;AACzC,gBAAY,GAAGA,cAAa,WAAW,IAAI,OAAO,KAAK,IAAI,EAAE;AAAA,MAC3D,CAAC,MAAM,SAAS,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,oBAAI,IAAI,EAAE;AAAA,MAAI,CAAC;AAAA,IACnD;AAEA,UAAM,QAAQ,IAAI,MAAM,aAAa,EAAE,KAAK,IAAI,CAAC;AACjD,gBAAY,UAAU,YAAY,iBAAiB,KAAK,KAAK;AAE7D,WAAO;AAAA,EACT,SAAS,OAAO;AACd,YAAQ,MAAM,yBAAyB,KAAK;AAAA,EAC9C;AACF;;;AC/CO,IAAM,UAAN,MAAqG;AAAA,EAArG;AAGL,uBAAqC;AAAA;AAAA,EAGrC,KACE,SACA,UAII,CAAC,GACC;AACN,QAAI,OAAO,YAAY,YAAY,CAAC,MAAM,QAAQ,OAAO,GAAG;AAC1D,UAAI,QAAQ,SAAU,MAAK,gBAAgB,QAAQ;AACnD,WAAK,YAAY;AAAA,QACf;AAAA,QACA,QAAQ;AAAA,QACR,QAAQ,YAAY,KAAK;AAAA,MAC3B;AAAA,IACF;AACA,QAAI,QAAQ,cAAe,MAAK,gBAAgB,QAAQ,aAAa;AAAA,EACvE;AAAA,EAEA,gBAAgB,gBAAwB,oBAA0B;AAChE,SAAK,YAAY,IAAI,iBAAiB,aAAa;AAEnD,SAAK,UAAU,YAAY,CACzB,EAAE,KAAK,MAMJ;AACH,UAAI,SAAS,YAAY;AACvB,aAAK,UAAU,YAAY,EAAE,MAAM,KAAK,IAAI,EAAE,CAAC;AAAA,MACjD,WAAW,KAAK,SAAS,QAAW;AAClC,mBAAW,OAAO,KAAK,KAAM,MAAK,UAAU,GAAG,IAAI,KAAK,KAAK,GAAG;AAAA,MAClE,OAAO;AAAA,MAEP;AAAA,IACF;AAEA,SAAK,UAAU,YAAY,UAAU;AAAA,EACvC;AAAA,EAEO,IACL,cACA,OACA,kBAAkB,OACZ;AACN,QAAI,KAAK,WAAW;AAClB,WAAK,UAAU,YAAY,IAAI;AAAA,IACjC;AACA,QAAI,KAAK,aAAa,CAAC,iBAAiB;AACtC,WAAK,UAAU,YAAY,EAAE,MAAM,cAAc,MAAM,MAAM,CAAC;AAAA,IAChE;AAAA,EACF;AAAA,EACO,IACL,cACkB;AAClB,QAAI,KAAK,aAAa,cAAc;AAClC,aAAO,KAAK,UAAU,YAAY;AAAA,IACpC,WAAW,CAAC,cAAc;AACxB,aAAO,KAAK,UAAU,GAAGC,cAAa,MAAM;AAAA,IAC9C;AAAA,EACF;AAAA,EAEO,MACL,cACY;AACZ,UAAM,QAAQ,KAAK,UAAU,GAAGA,cAAa,UAAU,EAAE;AAEzD,WAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,WAAK,UAAU,GAAGA,cAAa,UAAU,IAAI;AAAA,QAC3C,GAAG,KAAK,UAAU,GAAGA,cAAa,UAAU;AAAA,QAC5C,CAAC,oBAAoB;AACnB,cAAI,iBAAiB,iBAAiB;AACpC,oBAAQ,KAAK,UAAU,YAAY,CAAC;AACpC,iBAAK,UAAU,GAAGA,cAAa,UAAU,EAAE,KAAK,IAAI;AAEpD,gBAAI,KAAK,UAAU,GAAGA,cAAa,UAAU,EAAE,MAAM,CAAC,MAAM,MAAO,IAAI;AACrE,mBAAK,UAAU,GAAGA,cAAa,UAAU,IAAI,CAAC;AAAA,UAClD;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACO,SACL,cACA,aACY;AACZ,UAAM,QAAQ,KAAK,UAAU,GAAGA,cAAa,UAAU,EAAE;AACzD,WAAO,IAAI,QAAQ,CAAC,YAAY;AAC9B,WAAK,UAAU,GAAGA,cAAa,UAAU,IAAI;AAAA,QAC3C,GAAG,KAAK,UAAU,GAAGA,cAAa,UAAU;AAAA,QAC5C,CAAC,oBAAoB;AACnB,cAAI,iBAAiB,mBAChB,KAAK,UAAU,YAAY,MAAM,aAAa;AACjD,oBAAQ,KAAK,UAAU,YAAY,CAAC;AACpC,iBAAK,UAAU,GAAGA,cAAa,UAAU,EAAE,KAAK,IAAI;AAEpD,gBAAI,KAAK,UAAU,GAAGA,cAAa,UAAU,EAAE,MAAM,CAAC,MAAM,MAAO,IAAI;AACrE,mBAAK,UAAU,GAAGA,cAAa,UAAU,IAAI,CAAC;AAAA,UAClD;AAAA,QACF;AAAA,MACF;AAAA,IACF,CAAC;AAAA,EACH;AACF;AAEO,IAAM,iBAAiB,CAC5B,KACA,UACA,SACA,kBACqB;AACrB,QAAM,UAAU,IAAI,QAAiB;AACrC,UAAQ,KAAK,KAAK,EAAE,UAAU,SAAS,cAAc,CAAC;AACtD,SAAO;AACT;;;ACtJO,IAAM,oBAAN,cAAgC,SAAS;AAAA,EAG9C,gBACE,MACA,SACM;AAAA,EAAC;AAAA,EAaT,cAAc;AACZ,UAAM;AACN,QAAI,UAAU;AACd,cAAU,IAAI,SAAc;AAC1B,aAAO,QAAQ,OAAO,GAAG,IAAI;AAAA,IAC/B;AACA,WAAO,OAAO,eAAe,SAAS,WAAW,SAAS;AAAA,EAC5D;AACF;AAUO,IAAM,iBAAwC,SACnD,MACA,UAII,CAAC,GACc;AACnB,QAAM,OAAO,OAAO,KAAK,QAAQ,CAAC,CAAC;AAEnC,QAAM,eAAkB,KAAK,OAAO,CAClC,MACA,SACG;AACH,QAAI;AACJ,QAAI,QAAQ,gBAAgB,UAAa,QAAQ,YAAY,IAAI,IAAI,MAAM,QAAW;AACpF,cAAQ,QAAQ,YAAY,IAAI,IAAI;AAAA,IACtC,WAAW,MAAM;AACf,cAAQ,KAAK,IAAI;AAAA,IACnB;AACA,WAAO,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM;AAAA,EAClC,GAAG,QAAQ,CAAC,CAAM;AAElB,SAAO;AAAA,IACL;AAAA,IACA,QAAQ;AAAA,IACR,QAAQ;AAAA,EACV;AACF;AAEO,IAAM,kBAAkB,SAC7B,MACA,UAA8D,CAAC,GACzD;AACN,MAAI,CAAC,QAAQ,YAAa,SAAQ,cAAc,MAAM;AACtD,MAAI,CAAC,QAAQ,SAAU,SAAQ,WAAW,MAAM,SAAS;AAEzD,QAAM,aAAa,eAAe,KAAW,MAAM,MAAM,OAAO;AAChE,OAAK,UAAU;AACjB;AAEA,SAAS,kBAAkB,SAAmC;AAC5D,QAAM,QAAQ,CAAC;AACf,MAAI,MAAM;AACV,KAAG;AACD,UAAM,KAAK,GAAG,OAAO,oBAAoB,GAAG,CAAC;AAAA,EAC/C,SAAS,MAAM,OAAO,eAAe,GAAG;AAExC,SAAO,MAAM,KAAK,EAAE,OAAO,CAAC,GAAG,GAAG,QAAQ;AACxC,QAAI,KAAK,IAAI,IAAI,CAAC,KAAK,OAAO,QAAQ,CAAC,KAAK,WAAY,QAAO;AAAA,EACjE,CAAC;AACH;AAEO,SAAS,kBAKd,eACA,YACA,EAAE,SAAS,IAGP,CAAC,GACK;AACV,MAAI;AACJ,MAAI,OAAO;AAEX,MAAI,YAAY;AACd,UAAM,kBAAkB,kBAAkB,UAAU;AAEpD,cAAU,gBAAgB;AAAA,MACxB,CAAC,MAAM,SAAU,SAAS,iBAAiB,OAAO,WAAW,IAAI,MAAM,aACnE,EAAE,GAAG,MAAM,CAAC,IAAI,GAAG,WAAW,IAAI,EAAE,KAAK,UAAU,EAAE,IACrD;AAAA,MACJ,CAAC;AAAA,IACH;AAEA,UAAM,cAAc,WAAW,MAAM;AACrC,eAAW,OAAO,IAAI,kBAAkB;AACxC,eAAW,KAAK,iBAAiB;AACjC,eAAW,KAAK,kBAAkB;AAClC,eAAW,KAAK;AAAA,MACd,cAAc,EAAE,GAAG,YAAY,IAAI,GAAG,GAAG,cAAc,IAAI;AAAA,MAC3D,EAAE,SAAS,aAAa,UAAU,YAAY,aAAa,iBAAiB,MAAM,SAAS,cAAc;AAAA,IAC3G;AAAA,EACF,OAAO;AACL,WAAO;AAAA,MACL;AAAA,MACA,EAAE,UAAU,YAAY,MAAM,SAAS,eAAe,QAAQ;AAAA,IAChE;AAAA,EACF;AAEA,UAAQ,QAAQ,YAAY,MAAM,WAAW,CAAC,GAAG;AACnD;;;ACnKA,OAAO,WAAW;AAKX,SAAS,cAAoB,WAA6B;AAC/D,MAAI;AACJ,MAAI,MAAM,MAAM,QACZ,MAAM,MAAM,IACZ,MAAM,OAAO,SAAS,OAAQ,KAAK,OAAO,IAAI,GAAS,GAAG,EAAE,EAAE,SAAS,CAAC,EAAE;AAE9E,MAAI,MAAM,OAAO;AACf,cAAU,MAAM;AAAA,EAClB;AAEA,QAAM,QAAQ,QAAQ,YAAU;AAC9B,QAAI,KAAK,GAAG,aAAa,gBAAgB,EAAE,GAAG,GAAG;AAC/C,WAAK,GAAG,aAAa,gBAAgB,EAAE,GAAG,EAAE,QAAQ,UAAQ;AAC1D,YACE,KAAK,GAAG,aAAa,WAAW,EAAE,IAAI,KACtC,OAAO,KAAK,GAAG,aAAa,WAAW,EAAE,IAAI,MAAM,WACnD,MAAK,GAAG,aAAa,WAAW,EAAE,IAAI,EAAE,IAAI,KAAK,MAAM;AAAA,MAC3D,CAAC;AAAA,IACH;AAEA,WAAO,MAAM;AACX,UAAI,KAAK,GAAG,aAAa,gBAAgB,EAAE,GAAG,GAAG;AAC/C,aAAK,GAAG,aAAa,QAAQ,EAAE,GAAG,IAAI;AACtC,aAAK,GAAG,aAAa,gBAAgB,EAAE,GAAG,EAAE,QAAQ,UAAQ;AAC1D,cACE,KAAK,GAAG,aAAa,WAAW,EAAE,IAAI,KACtC,OAAO,KAAK,GAAG,aAAa,WAAW,EAAE,IAAI,MAAM,YACnD;AACA,iBAAK,GAAG,aAAa,WAAW,EAAE,IAAI,EAAE,OAAO,GAAG;AAAA,UACpD;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF,GAAG,MAAM;AACP,SAAK,GAAG,aAAa,QAAQ,EAAE,iBAAiB,IAAI;AAEpD,QAAI,KAAK,GAAG,aAAa,QAAQ,EAAE,GAAG,MAAM,MAAM;AAChD,WAAK,GAAG,aAAa,QAAQ,EAAE,iBAAiB,IAAI;AACpD,aAAO,KAAK,GAAG,aAAa,MAAM;AAAA,IACpC;AAEA,WAAO;AAAA,EACT,CAAC;AAED,QAAM,UAAU,MAAM;AACpB,WAAO,MAAM;AACX,UAAI,KAAK,GAAG,aAAa,QAAQ,EAAE,GAAG,KAAK,KAAK,GAAG,aAAa,gBAAgB,EAAE,GAAG,GAAG;AACtF,aAAK,GAAG,aAAa,gBAAgB,EAAE,GAAG,EAAE,QAAQ,UAAQ;AAC1D,cACE,KAAK,GAAG,aAAa,WAAW,EAAE,IAAI,KACtC,OAAO,KAAK,GAAG,aAAa,WAAW,EAAE,IAAI,MAAM,WACnD,MAAK,GAAG,aAAa,WAAW,EAAE,IAAI,EAAE,OAAO,GAAG;AAAA,QACtD,CAAC;AACD,eAAO,KAAK,GAAG,aAAa,gBAAgB,EAAE,GAAG;AACjD,eAAO,KAAK,GAAG,aAAa,QAAQ,EAAE,GAAG;AAAA,MAC3C;AAAA,IACF;AAAA,EACF,GAAG,CAAC,CAAC;AAEL,MAAI,cAAc,QAAW;AAC3B,WAAO,MAAM,SAAS;AAAA,EACxB;AAEA,SAAO,CAAC,OAAO,KAAK,GAAG,aAAa,SAAS,CAAC;AAChD;;;AC5DA,IAAM,QAA4B,IAAI,kBAAkB;AAExD,MAAM,iBAAiB;AACvB,MAAM,kBAAkB;AACxB,MAAM,UAAU,eAId,CAAC,GAAG,EAAE,UAAU,cAAc,CAAC;AACjC,MAAM,SAAS;",
  "names": ["FIELDS_PREFIX", "FIELDS_PREFIX"]
}
