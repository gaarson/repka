{
  "version": 3,
  "sources": ["../../packages/watcher/index.ts"],
  "sourcesContent": ["import { providerType, SPECIAL_KEY, FIELDS_PREFIX, createSource } from 'core';\n\nexport type baseSourceObjType<T> = {\n  [key: string]: T,\n};\n\nexport type specialKeyLiteralType = \"__PROVIDER_ID__\";\n\nexport type proxyHandlerType<T> = {\n  set: (\n    obj: T & { onUpdate: ((...args: any) => void)[] },\n    prop: string,\n    value: T\n  ) => boolean\n  get?: (\n    obj: T & { onUpdate: ((...args: any) => void)[] },\n    prop: string,\n  ) => unknown\n};\n\nexport interface IWatcher<\n  T = { [key: string]: unknown },\n  M = undefined,\n  P = undefined\n> {\n  sourceObj: T & providerType<T, M>;\n  savedProvider: P;\n  SPECIAL_KEY: specialKeyLiteralType;\n  broadcast: any;\n\n  init(\n    initObj: T,\n    options: {\n      provider?: providerType,\n      methods?: M,\n      broadcastName?: string\n    }\n  ): void;\n\n  set(\n    propertyName: keyof (T), \n    value: (T & providerType<T, M>)[keyof (T)],\n    ignoreBroadcast?: boolean\n  ): void;\n  get(\n    propertyName?: keyof (T)\n  ): (T)[keyof T] | T;\n\n  createBroadcast(broadcastName: string): void;\n  watch(fieldName: string): Promise<T>;\n  watchFor(fieldName: string, neededValue: unknown): Promise<T>;\n}\n\nexport type watcherCreatorType = <T, M>(\n  obj: T,\n  provider?: providerType,\n  methods?: M,\n  broadcastName?: string\n) => Watcher<T, M>;\n\nexport class Watcher<T = {[key: string]: unknown}, M = undefined,  P = undefined> implements IWatcher<T, M, P> {\n\n  savedProvider: P;\n  sourceObj: T & providerType<T, M>;\n  SPECIAL_KEY: specialKeyLiteralType = SPECIAL_KEY;\n  broadcast: any;\n\n  init(\n    initObj: T,\n    options: {\n      provider?: any,\n      methods?: M,\n      broadcastName?: string\n    } = {}\n  ): void {\n    if (typeof initObj === 'object' && !Array.isArray(initObj)) {\n      if (options.provider) this.savedProvider = options.provider;\n      this.sourceObj = createSource<T, M>(\n        initObj, \n        options.methods, \n        options.provider || this.savedProvider\n      ) as T & providerType<T, M>;\n    }\n    if (options.broadcastName) this.createBroadcast(options.broadcastName);\n  }\n\n  createBroadcast(broadcastName: string = 'broadcastWatcher'): void {\n    this.broadcast = new BroadcastChannel(broadcastName);\n\n    this.broadcast.onmessage = (\n      { data }: { \n        data: { \n          type?: keyof (T), \n          data: providerType<T> | (providerType<T>)[keyof (providerType<T>)] \n        } | 'needSome' \n      }\n    ) => {\n      if (data === 'needSome') {\n        this.broadcast.postMessage({ data: this.get() });\n      } else if (data.type === undefined) {\n        for (const key in data.data) this.sourceObj[key] = data.data[key];\n      } else {\n        // this.set(data.type, data.data, true);\n      }\n    };\n\n    this.broadcast.postMessage('needSome');\n  }\n\n  public set(\n    propertyName: keyof (T), \n    value: (T & providerType<T, M>)[keyof (T)],\n    ignoreBroadcast = false\n  ): void {\n    if (this.sourceObj) {\n      this.sourceObj[propertyName] = value;\n    }\n    if (this.broadcast && !ignoreBroadcast) {\n      this.broadcast.postMessage({ type: propertyName, data: value });\n    }\n  }\n  public get(\n    propertyName?: keyof (T)\n  ): (T)[keyof T] | T {\n    if (this.sourceObj && propertyName) {\n      return this.sourceObj[propertyName];\n    } else if (!propertyName) {\n      return this.sourceObj[`${FIELDS_PREFIX}data`];\n    }\n  }\n\n  public watch(\n    propertyName: string,\n  ): Promise<T> {\n    const index = this.sourceObj[`${FIELDS_PREFIX}onUpdate`].length;\n\n    return new Promise((resolve) => {\n      this.sourceObj[`${FIELDS_PREFIX}onUpdate`] = [\n        ...this.sourceObj[`${FIELDS_PREFIX}onUpdate`], \n        (updatedProperty) => {\n          if (propertyName === updatedProperty) {\n            resolve(this.sourceObj[propertyName]);\n            this.sourceObj[`${FIELDS_PREFIX}onUpdate`][index] = null;\n\n            if (this.sourceObj[`${FIELDS_PREFIX}onUpdate`].every((i) => i ===  null))\n              this.sourceObj[`${FIELDS_PREFIX}onUpdate`] = [];\n          }\n        }\n      ];\n    });\n  }\n  public watchFor(\n    propertyName: string,\n    neededValue: T\n  ): Promise<T> {\n    const index = this.sourceObj[`${FIELDS_PREFIX}onUpdate`].length;\n    return new Promise((resolve) => {\n      this.sourceObj[`${FIELDS_PREFIX}onUpdate`] = [\n        ...this.sourceObj[`${FIELDS_PREFIX}onUpdate`], \n        (updatedProperty) => {\n          if (propertyName === updatedProperty \n            && this.sourceObj[propertyName] === neededValue) {\n            resolve(this.sourceObj[propertyName]);\n            this.sourceObj[`${FIELDS_PREFIX}onUpdate`][index] = null;\n\n            if (this.sourceObj[`${FIELDS_PREFIX}onUpdate`].every((i) => i ===  null)) \n              this.sourceObj[`${FIELDS_PREFIX}onUpdate`] = [];\n          }\n        }\n      ];\n    });\n  }\n}\n\nexport const watcherCreator = <T, M>(\n  obj: T,\n  provider?: providerType,\n  methods?: M,\n  broadcastName?: string\n): Watcher<T, M> => {\n  const watcher = new Watcher<T, M>();\n  watcher.init(obj, { provider, methods, broadcastName });\n  return watcher;\n};\n\n\n"],
  "mappings": "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",
  "names": []
}
