// packages/core/index.ts
var Callable = class extends Function {
  constructor() {
    super();
    let closure = void 0;
    closure = (...args) => {
      return closure.__call(...args);
    };
    return Object.setPrototypeOf(closure, new.target.prototype);
  }
};
var SPECIAL_KEY = "__PROVIDER_ID__";
var FIELDS_PREFIX = "__REPO__";
var get = (obj, prop) => {
  if (obj[`${FIELDS_PREFIX}muppet`][SPECIAL_KEY] && prop !== obj[`${FIELDS_PREFIX}muppet`][SPECIAL_KEY] && (typeof prop === "string" && !prop.startsWith(FIELDS_PREFIX))) {
    obj[`${FIELDS_PREFIX}muppet`][obj[`${FIELDS_PREFIX}muppet`][SPECIAL_KEY]] = false;
    obj[`${FIELDS_PREFIX}criticalFields`][obj[`${FIELDS_PREFIX}muppet`][SPECIAL_KEY]] = [.../* @__PURE__ */ new Set([
      ...obj[`${FIELDS_PREFIX}criticalFields`][obj[`${FIELDS_PREFIX}muppet`][SPECIAL_KEY]] || [],
      prop
    ])];
  }
  if (typeof prop === "string" && prop.startsWith(FIELDS_PREFIX) || prop === "__call") {
    return obj[prop];
  }
  return obj[`${FIELDS_PREFIX}data`][prop];
};
var set = (obj, prop, value) => {
  if (typeof prop === "string" && prop.startsWith(FIELDS_PREFIX) || prop === "__call") {
    obj[prop] = value;
    return true;
  }
  obj[`${FIELDS_PREFIX}data`] = {
    ...obj[`${FIELDS_PREFIX}data`],
    [prop]: value
  };
  if (obj[`${FIELDS_PREFIX}listeners`][prop] && obj[`${FIELDS_PREFIX}listeners`][prop].size) {
    obj[`${FIELDS_PREFIX}listeners`][prop].forEach((notify, key) => {
      if (obj[`${FIELDS_PREFIX}muppet`][key] !== void 0 && obj[`${FIELDS_PREFIX}muppet`][key] === false) {
        obj[`${FIELDS_PREFIX}muppet`][key] = true;
      }
      notify();
    });
  }
  if (obj[`${FIELDS_PREFIX}onUpdate`].length) {
    obj[`${FIELDS_PREFIX}onUpdate`].forEach((fn) => fn && fn(prop));
  }
  return true;
};
var createSource = (data, methods, provider) => {
  try {
    let defaultProvider = function() {
      return methods ? [this, methods] : this;
    };
    ;
    const callableObj = new Callable();
    if (methods)
      callableObj[`${FIELDS_PREFIX}methods`] = methods;
    callableObj[`${FIELDS_PREFIX}onUpdate`] = [];
    callableObj[`${FIELDS_PREFIX}data`] = data;
    callableObj[`${FIELDS_PREFIX}criticalFields`] = {};
    callableObj[`${FIELDS_PREFIX}muppet`] = {};
    callableObj[`${FIELDS_PREFIX}listeners`] = Object.keys(data).reduce(
      (prev, key) => ({ ...prev, [key]: /* @__PURE__ */ new Map() }),
      {}
    );
    const proxy = new Proxy(callableObj, { set, get });
    callableObj.__call = (provider || defaultProvider).bind(proxy);
    return proxy;
  } catch (error) {
    console.error("SOURCE OBJECT ERROR: ", error);
  }
};

export {
  Callable,
  SPECIAL_KEY,
  FIELDS_PREFIX,
  createSource
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vLi4vcGFja2FnZXMvY29yZS9pbmRleC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiZXhwb3J0IHR5cGUgcHJvdmlkZXJUeXBlPERhdGFUeXBlID0gdW5kZWZpbmVkLCBNZXRob2RzT2JqVHlwZSA9IHVuZGVmaW5lZD4gPSAoKSA9PiBcbiAgKE1ldGhvZHNPYmpUeXBlIGV4dGVuZHMgb2JqZWN0ID8gW0RhdGFUeXBlLCBNZXRob2RzT2JqVHlwZV0gOiBEYXRhVHlwZSk7XG5cbmV4cG9ydCBjbGFzcyBDYWxsYWJsZSBleHRlbmRzIEZ1bmN0aW9uIHtcbiAgX19jYWxsOiBGdW5jdGlvblxuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIGxldCBjbG9zdXJlID0gdW5kZWZpbmVkO1xuICAgIGNsb3N1cmUgPSAoLi4uYXJncykgPT4geyBcbiAgICAgIHJldHVybiBjbG9zdXJlLl9fY2FsbCguLi5hcmdzKTsgXG4gICAgfTtcbiAgICByZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mKGNsb3N1cmUsIG5ldy50YXJnZXQucHJvdG90eXBlKTtcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgU1BFQ0lBTF9LRVkgPSAnX19QUk9WSURFUl9JRF9fJztcbmV4cG9ydCBjb25zdCBGSUVMRFNfUFJFRklYID0gJ19fUkVQT19fJ1xuXG5jb25zdCBnZXQgPSAob2JqLCBwcm9wKSA9PiB7XG4gIGlmIChcbiAgICBvYmpbYCR7RklFTERTX1BSRUZJWH1tdXBwZXRgXVtTUEVDSUFMX0tFWV0gXG4gICAgJiYgcHJvcCAhPT0gb2JqW2Ake0ZJRUxEU19QUkVGSVh9bXVwcGV0YF1bU1BFQ0lBTF9LRVldXG4gICAgJiYgKHR5cGVvZiBwcm9wID09PSAnc3RyaW5nJyAmJiAhcHJvcC5zdGFydHNXaXRoKEZJRUxEU19QUkVGSVgpKSBcbiAgKSB7XG4gICAgb2JqW2Ake0ZJRUxEU19QUkVGSVh9bXVwcGV0YF1bb2JqW2Ake0ZJRUxEU19QUkVGSVh9bXVwcGV0YF1bU1BFQ0lBTF9LRVldXSA9IGZhbHNlO1xuICAgIG9ialtgJHtGSUVMRFNfUFJFRklYfWNyaXRpY2FsRmllbGRzYF1bb2JqW2Ake0ZJRUxEU19QUkVGSVh9bXVwcGV0YF1bU1BFQ0lBTF9LRVldXSA9IFsuLi5uZXcgU2V0KFtcbiAgICAgIC4uLihvYmpbYCR7RklFTERTX1BSRUZJWH1jcml0aWNhbEZpZWxkc2BdW29ialtgJHtGSUVMRFNfUFJFRklYfW11cHBldGBdW1NQRUNJQUxfS0VZXV0gfHwgW10pLFxuICAgICAgcHJvcFxuICAgIF0pXTtcbiAgfVxuICBpZiAoKHR5cGVvZiBwcm9wID09PSAnc3RyaW5nJyAmJiBwcm9wLnN0YXJ0c1dpdGgoRklFTERTX1BSRUZJWCkpIHx8IHByb3AgPT09ICdfX2NhbGwnKSB7XG4gICAgcmV0dXJuIG9ialtwcm9wXVxuICB9XG5cbiAgcmV0dXJuIG9ialtgJHtGSUVMRFNfUFJFRklYfWRhdGFgXVtwcm9wXTtcbn1cblxuY29uc3Qgc2V0ID0gKG9iaiwgcHJvcCwgdmFsdWUpOiBib29sZWFuID0+IHtcbiAgaWYgKCh0eXBlb2YgcHJvcCA9PT0gJ3N0cmluZycgJiYgcHJvcC5zdGFydHNXaXRoKEZJRUxEU19QUkVGSVgpKSB8fCBwcm9wID09PSAnX19jYWxsJykge1xuICAgIG9ialtwcm9wXSA9IHZhbHVlO1xuICAgIHJldHVybiB0cnVlO1xuICB9IFxuXG4gIG9ialtgJHtGSUVMRFNfUFJFRklYfWRhdGFgXSA9IHtcbiAgICAuLi5vYmpbYCR7RklFTERTX1BSRUZJWH1kYXRhYF0sXG4gICAgW3Byb3BdOiB2YWx1ZVxuICB9O1xuXG4gIGlmIChvYmpbYCR7RklFTERTX1BSRUZJWH1saXN0ZW5lcnNgXVtwcm9wXSAmJiBvYmpbYCR7RklFTERTX1BSRUZJWH1saXN0ZW5lcnNgXVtwcm9wXS5zaXplKSB7XG4gICAgb2JqW2Ake0ZJRUxEU19QUkVGSVh9bGlzdGVuZXJzYF1bcHJvcF0uZm9yRWFjaCgobm90aWZ5LCBrZXkpID0+IHtcbiAgICAgIGlmIChvYmpbYCR7RklFTERTX1BSRUZJWH1tdXBwZXRgXVtrZXldICE9PSB1bmRlZmluZWQgXG4gICAgICAgICYmIG9ialtgJHtGSUVMRFNfUFJFRklYfW11cHBldGBdW2tleV0gPT09IGZhbHNlKSB7IFxuICAgICAgICBvYmpbYCR7RklFTERTX1BSRUZJWH1tdXBwZXRgXVtrZXldID0gdHJ1ZTsgXG4gICAgICB9XG5cbiAgICAgIG5vdGlmeSgpO1xuICAgIH0pO1xuICB9XG4gIGlmIChvYmpbYCR7RklFTERTX1BSRUZJWH1vblVwZGF0ZWBdLmxlbmd0aCkge1xuICAgIG9ialtgJHtGSUVMRFNfUFJFRklYfW9uVXBkYXRlYF0uZm9yRWFjaCgoZm46ICguLi5hcmdzOiB1bmtub3duW10pID0+IHZvaWQpID0+IGZuICYmIGZuKHByb3ApKTtcbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIElTb3VyY2U8VD4ge1xuICA8XG4gICAgRGF0YVR5cGUgPSBULFxuICAgIE1ldGhvZHNPYmpUeXBlID0gdW5kZWZpbmVkXG4gID4oXG4gICAgZGF0YTogRGF0YVR5cGUsXG4gICAgbWV0aG9kcz86IE1ldGhvZHNPYmpUeXBlLFxuICAgIHByb3ZpZGVyPzogcHJvdmlkZXJUeXBlPERhdGFUeXBlLCBNZXRob2RzT2JqVHlwZT4sXG4gICk6ICgoKSA9PiBbRGF0YVR5cGUsIE9taXQ8TWV0aG9kc09ialR5cGUsICdyZXBvJz5dKSAmIERhdGFUeXBlO1xufVxuXG5leHBvcnQgY29uc3QgY3JlYXRlU291cmNlID0gPFxuICBEYXRhVHlwZSA9IHVua25vd24sXG4gIE1ldGhvZHNPYmpUeXBlID0gdW5kZWZpbmVkXG4+KFxuICBkYXRhOiBEYXRhVHlwZSxcbiAgbWV0aG9kcz86IE1ldGhvZHNPYmpUeXBlLFxuICBwcm92aWRlcj86IHByb3ZpZGVyVHlwZTxEYXRhVHlwZSwgTWV0aG9kc09ialR5cGU+LFxuKTogSVNvdXJjZTxEYXRhVHlwZT4gPT4ge1xuICB0cnkge1xuICAgIGZ1bmN0aW9uIGRlZmF1bHRQcm92aWRlcigpIHtcbiAgICAgIHJldHVybiBtZXRob2RzID8gW3RoaXMsIG1ldGhvZHNdIDogdGhpcztcbiAgICB9O1xuICAgIGNvbnN0IGNhbGxhYmxlT2JqID0gbmV3IENhbGxhYmxlKCk7XG5cbiAgICBpZiAobWV0aG9kcykgY2FsbGFibGVPYmpbYCR7RklFTERTX1BSRUZJWH1tZXRob2RzYF0gPSBtZXRob2RzO1xuXG4gICAgY2FsbGFibGVPYmpbYCR7RklFTERTX1BSRUZJWH1vblVwZGF0ZWBdID0gW107XG4gICAgY2FsbGFibGVPYmpbYCR7RklFTERTX1BSRUZJWH1kYXRhYF0gPSBkYXRhO1xuICAgIGNhbGxhYmxlT2JqW2Ake0ZJRUxEU19QUkVGSVh9Y3JpdGljYWxGaWVsZHNgXSA9IHt9O1xuICAgIGNhbGxhYmxlT2JqW2Ake0ZJRUxEU19QUkVGSVh9bXVwcGV0YF0gPSB7fTtcbiAgICBjYWxsYWJsZU9ialtgJHtGSUVMRFNfUFJFRklYfWxpc3RlbmVyc2BdID0gT2JqZWN0LmtleXMoZGF0YSkucmVkdWNlKFxuICAgICAgKHByZXYsIGtleSkgPT4gKHsgLi4ucHJldiwgW2tleV06IG5ldyBNYXAoKSB9KSwge31cbiAgICApO1xuXG4gICAgY29uc3QgcHJveHkgPSBuZXcgUHJveHkoY2FsbGFibGVPYmosIHsgc2V0LCBnZXQgfSk7XG4gICAgY2FsbGFibGVPYmouX19jYWxsID0gKHByb3ZpZGVyIHx8IGRlZmF1bHRQcm92aWRlcikuYmluZChwcm94eSk7XG5cbiAgICByZXR1cm4gcHJveHk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignU09VUkNFIE9CSkVDVCBFUlJPUjogJywgZXJyb3IpO1xuICB9XG59O1xuIl0sCiAgIm1hcHBpbmdzIjogIjtBQUdPLElBQU0sV0FBTixjQUF1QixTQUFTO0FBQUEsRUFFckMsY0FBYztBQUNaLFVBQU07QUFDTixRQUFJLFVBQVU7QUFDZCxjQUFVLElBQUksU0FBUztBQUNyQixhQUFPLFFBQVEsT0FBTyxHQUFHLElBQUk7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
